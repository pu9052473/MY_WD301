import{r as E,j as i}from"./index-Ca0gi0pd.js";import{A as S}from"./constants-qZa9FZnL.js";const p={columns:{pending:{id:"pending",title:"Pending",taskIDs:["2"]},in_progress:{id:"in_progress",title:"In progress",taskIDs:["1"]},done:{id:"done",title:"Done",taskIDs:[]}},tasks:{1:{id:1,title:"first Sample Task",description:"Sample description about the task which is to be completed",dueDate:"18-02-2024",state:"in_progress",assignee:void 0,assignedUserName:void 0},2:{id:2,title:"second Sample Task",description:"Sample description about the task which is to be completed",dueDate:"16-06-2024",state:"pending",assignee:void 0,assignedUserName:void 0},3:{id:3,title:"third Sample Task",description:"Sample description about the task which is to be completed",dueDate:"18-02-2024",state:"in_progress",assignee:void 0,assignedUserName:void 0},4:{id:4,title:"forth Sample Task",description:"Sample description about the task which is to be completed",dueDate:"16-06-2024",state:"pending",assignee:void 0,assignedUserName:void 0}},columnOrder:["pending","in_progress","done"]};var r=(e=>(e.FETCH_TASKS_REQUEST="FETCH_TASKS_REQUEST",e.FETCH_TASKS_SUCCESS="FETCH_TASKS_SUCCESS",e.FETCH_TASKS_FAILURE="FETCH_TASKS_FAILURE",e.CREATE_TASK_REQUEST="CREATE_TASK_REQUEST",e.CREATE_TASK_SUCCESS="CREATE_TASK_SUCCESS",e.CREATE_TASK_FAILURE="CREATE_TASK_FAILURE",e.DELETE_TASKS_REQUEST="DELETE_TASKS_REQUEST",e.DELETE_TASKS_SUCCESS="DELETE_TASKS_SUCCESS",e.DELETE_TASKS_FAILURE="DELETE_TASKS_FAILURE",e.UPDATE_TASK_REQUEST="UPDATE_TASK_REQUEST",e.UPDATE_TASK_SUCCESS="UPDATE_TASK_SUCCESS",e.UPDATE_TASK_FAILURE="UPDATE_TASK_FAILURE",e.REORDER_TASKS="REORDER_TASKS",e))(r||{});const n={projectData:p,isLoading:!1,isError:!1,errorMessage:""},A=(e=n,t)=>{switch(t.type){case r.FETCH_TASKS_REQUEST:return{...e,isLoading:!0};case r.FETCH_TASKS_SUCCESS:return{...e,isLoading:!1,projectData:t.payload};case r.FETCH_TASKS_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:t.payload};case r.CREATE_TASK_REQUEST:return{...e,isLoading:!0};case r.CREATE_TASK_SUCCESS:return{...e,isLoading:!1};case r.CREATE_TASK_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:t.payload};case r.DELETE_TASKS_REQUEST:return{...e,isLoading:!0};case r.DELETE_TASKS_SUCCESS:return{...e,isLoading:!1};case r.DELETE_TASKS_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:t.payload};case r.UPDATE_TASK_REQUEST:return{...e,isLoading:!0};case r.UPDATE_TASK_SUCCESS:return{...e,isLoading:!1};case r.UPDATE_TASK_FAILURE:return{...e,isLoading:!1,isError:!0,errorMessage:t.payload};case r.REORDER_TASKS:return{...e,isLoading:!1,projectData:t.payload};default:return e}},_=E.createContext(n),d=E.createContext(()=>{}),C=({children:e})=>{const[t,o]=E.useReducer(A,n);return i.jsx(_.Provider,{value:t,children:i.jsx(d.Provider,{value:o,children:e})})},R=()=>E.useContext(_),l=()=>E.useContext(d),u=async(e,t,o)=>{const s=localStorage.getItem("authToken")??"";try{if(e({type:r.CREATE_TASK_REQUEST}),!(await fetch(`${S}/projects/${t}/tasks/`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify(o)})).ok)throw new Error("Failed to create task");e({type:r.CREATE_TASK_SUCCESS}),T(e,t)}catch(a){console.error("Operation failed:",a),e({type:r.CREATE_TASK_FAILURE,payload:"Unable to create task"})}},K=(e,t)=>{e({type:r.REORDER_TASKS,payload:t})},T=async(e,t)=>{const o=localStorage.getItem("authToken")??"";try{e({type:r.FETCH_TASKS_REQUEST});const s=await fetch(`${S}/projects/${t}/tasks`,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}});if(!s.ok)throw new Error("Failed to fetch tasks");const a=await s.json();e({type:r.FETCH_TASKS_SUCCESS,payload:a})}catch(s){console.error("Operation failed:",s),e({type:r.FETCH_TASKS_FAILURE,payload:"Unable to load tasks"})}},g=async(e,t,o)=>{const s=localStorage.getItem("authToken")??"";try{if(e({type:r.DELETE_TASKS_REQUEST}),!(await fetch(`${S}/projects/${t}/tasks/${o.id}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify(o)})).ok)throw new Error("Failed to delete task");e({type:r.DELETE_TASKS_SUCCESS}),T(e,t)}catch(a){console.error("Operation failed:",a),e({type:r.DELETE_TASKS_FAILURE,payload:"Unable to delete task"})}},y=async(e,t,o)=>{const s=localStorage.getItem("authToken")??"";try{if(e({type:r.UPDATE_TASK_REQUEST}),!(await fetch(`${S}/projects/${t}/tasks/${o.id}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify(o)})).ok)throw new Error("Failed to update task");e({type:r.UPDATE_TASK_SUCCESS}),T(e,t)}catch(a){console.error("Operation failed:",a),e({type:r.UPDATE_TASK_FAILURE,payload:"Unable to update task"})}};export{C as T,u as a,y as b,R as c,g as d,T as e,K as r,l as u};
